{
    "openapi":"3.0.2",
    "info":{
       "title":"users",
       "version":"0.1.0"
    },
    "servers": [{"url": "https://example.com"}],
    "paths":{
       "/users":{
          "post":{
             "tags":[
                "users"
             ],
             "summary":"Create",
             "description":"create a user, only for tests\n- *access:* secret key\n- **body**: a UserCreate object",
             "operationId":"create_users_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Key",
                      "type":"string"
                   },
                   "name":"key",
                   "in":"query"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/UserCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/UserGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             }
          }
       },
       "/user/{user_id}":{
          "get":{
             "tags":[
                "users"
             ],
             "summary":"Get",
             "description":"get a user\n- *access:* the authenticated user themselves or the owner of a company of which the user is a member\n    or admin users of companies user is a co-owner of\n- **user_id**: id of the user",
             "operationId":"get_user__user_id__get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get User  User Id  Get",
                            "anyOf":[
                               {
                                  "$ref":"#/components/schemas/UserGet"
                               },
                               {
                                  "$ref":"#/components/schemas/UserGetBasic"
                               }
                            ]
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "patch":{
             "tags":[
                "users"
             ],
             "summary":"Update",
             "description":"update a user\n- *access:* the authenticated user themselves\n- **user_id**: id of the user\n- **body**: a UserUpdate object",
             "operationId":"update_user__user_id__patch",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/UserUpdate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/UserGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{user_id}/companies":{
          "get":{
             "tags":[
                "users"
             ],
             "summary":"Get Company Membership",
             "description":"get a list of companies the user is a member of including the administrated company\n- *access:* the authenticated user themselves\n- **user_id**: id of the user",
             "operationId":"get_company_membership_user__user_id__companies_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                },
                {
                   "required":false,
                   "schema":{
                      "title":"Fields",
                      "type":"array",
                      "items":{
                         "type":"string"
                      },
                      "default":[
                         
                      ]
                   },
                   "name":"fields",
                   "in":"query"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get Company Membership User  User Id  Companies Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/CompanyGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{user_id}/goals":{
          "get":{
             "tags":[
                "users"
             ],
             "summary":"Get Goal Contributions",
             "description":"get a list of goals the user participates in\n- *access:* the authenticated user themselves\n- **user_id**: id of the user",
             "operationId":"get_goal_contributions_user__user_id__goals_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get Goal Contributions User  User Id  Goals Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/GoalGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{user_id}/email":{
          "put":{
             "tags":[
                "users"
             ],
             "summary":"Update Email",
             "description":"update a users email\n- *access:* the administrator of the company the user is a part of\n- **user_id**: id of the user\n- **body**: a UserUpdateEmail object",
             "operationId":"update_email_user__user_id__email_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/UserUpdateEmail"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/UserGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{user_id}/verification-email":{
          "post":{
             "tags":[
                "users"
             ],
             "summary":"Email Verification",
             "operationId":"email_verification_user__user_id__verification_email_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{user_id}/history":{
          "get":{
             "tags":[
                "history"
             ],
             "summary":"Get User History",
             "description":"get history for a user\n- *access:* the authenticated user themselves\n- **user_id**: user id of the user",
             "operationId":"get_user_history_user__user_id__history_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get User History User  User Id  History Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/HistoryGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/history":{
          "get":{
             "tags":[
                "history"
             ],
             "summary":"Get Company History",
             "description":"get history for a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company",
             "operationId":"get_company_history_company__company_id__history_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get Company History Company  Company Id  History Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/HistoryGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/api-tokens":{
          "get":{
             "tags":[
                "api tokens"
             ],
             "summary":"Get All",
             "description":"get all owned tokens for the authenticated user\n- *access:* an ownco user",
             "operationId":"get_all_api_tokens_get",
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get All Api Tokens Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/ApiTokenGet"
                            }
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "api tokens"
             ],
             "summary":"Create",
             "description":"create a new api token for the authenticated user\n- *access:* an ownco user\n- **body**: an ApiTokenCreate object",
             "operationId":"create_api_tokens_post",
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/ApiTokenCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ApiTokenCreateGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/api-token/{token_id}":{
          "delete":{
             "tags":[
                "api tokens"
             ],
             "summary":"Delete",
             "description":"delete an api token\n- *access:* the user that is the owner of the given token\n- **token_id**: id of the token",
             "operationId":"delete_api_token__token_id__delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Token Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"token_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/companies":{
          "post":{
             "tags":[
                "companies"
             ],
             "summary":"Create",
             "description":"create a new company\n- *access:* the role company_admin\n- **body**: a CompanyCreate object",
             "operationId":"create_companies_post",
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/CompanyCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CompanyGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}":{
          "get":{
             "tags":[
                "companies"
             ],
             "summary":"Get",
             "description":"get a company\n- *access:* all authenticated users\n- **company_id**: id of the company",
             "operationId":"get_company__company_id__get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                },
                {
                   "required":false,
                   "schema":{
                      "title":"Fields",
                      "type":"array",
                      "items":{
                         "type":"string"
                      },
                      "default":[
                         
                      ]
                   },
                   "name":"fields",
                   "in":"query"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CompanyGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "delete":{
             "tags":[
                "companies"
             ],
             "summary":"Delete",
             "description":"deletes a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company",
             "operationId":"delete_company__company_id__delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "patch":{
             "tags":[
                "companies"
             ],
             "summary":"Update",
             "description":"update a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **body**: a CompanyUpdate object",
             "operationId":"update_company__company_id__patch",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/CompanyUpdate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CompanyGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/goals":{
          "get":{
             "tags":[
                "companies"
             ],
             "summary":"Get Goals",
             "description":"get all goals for a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company",
             "operationId":"get_goals_company__company_id__goals_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                },
                {
                   "required":false,
                   "schema":{
                      "title":"Fields",
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   },
                   "name":"fields",
                   "in":"query"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get Goals Company  Company Id  Goals Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/GoalGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "goals"
             ],
             "summary":"Create",
             "description":"create a new goal\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **body**: a GoalCreate object",
             "operationId":"create_company__company_id__goals_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/GoalCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GoalGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id_or_domain}/community":{
          "get":{
             "tags":[
                "companies"
             ],
             "summary":"Get Community Page",
             "description":"get the community page of a company\n- *access:* everyone\n- **company_id_or_domain**: id of the company or the domain",
             "operationId":"get_community_page_company__company_id_or_domain__community_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id Or Domain",
                      "type":"string"
                   },
                   "name":"company_id_or_domain",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CommunityPageGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             }
          }
       },
       "/company/{company_id}/community":{
          "post":{
             "tags":[
                "companies"
             ],
             "summary":"Create Community Page",
             "description":"update the community page of a company\nNOTE: for now each company has only one community page, that may change in the future\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **body**: a CommunityPageCreate object",
             "operationId":"create_community_page_company__company_id__community_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/CommunityPageCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CommunityPageGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "delete":{
             "tags":[
                "companies"
             ],
             "summary":"Delete Community Page",
             "description":"deletes a community page for a given company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company",
             "operationId":"delete_community_page_company__company_id__community_delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "patch":{
             "tags":[
                "companies"
             ],
             "summary":"Update Community Page",
             "description":"update the community page of a company\nNOTE: for now each company has only one community page, that may change in the future\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **body**: a CommunityPageUpdate object",
             "operationId":"update_community_page_company__company_id__community_patch",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/CommunityPageUpdate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CommunityPageGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}":{
          "get":{
             "tags":[
                "goals"
             ],
             "summary":"Get",
             "description":"get a goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"get_goal__goal_id__get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                },
                {
                   "required":false,
                   "schema":{
                      "title":"Fields",
                      "type":"array",
                      "items":{
                         "type":"string"
                      }
                   },
                   "name":"fields",
                   "in":"query"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GoalGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "delete":{
             "tags":[
                "goals"
             ],
             "summary":"Delete",
             "description":"deletes a goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"delete_goal__goal_id__delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "patch":{
             "tags":[
                "goals"
             ],
             "summary":"Update",
             "description":"update a goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **body**: a GoalUpdate object",
             "operationId":"update_goal__goal_id__patch",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/GoalUpdate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GoalGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/data-sources":{
          "get":{
             "tags":[
                "data sources"
             ],
             "summary":"Get All",
             "description":"get all datasources for a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company",
             "operationId":"get_all_company__company_id__data_sources_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get All Company  Company Id  Data Sources Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/DatasourceGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "data sources"
             ],
             "summary":"Create",
             "description":"create a new datasource for a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **body**: a DatasourceCreate object",
             "operationId":"create_company__company_id__data_sources_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                },
                {
                   "required":false,
                   "schema":{
                      "title":"Skip Test",
                      "type":"boolean",
                      "default":false
                   },
                   "name":"skip_test",
                   "in":"query"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/DatasourceCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/DatasourceGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/data-sources/test":{
          "post":{
             "tags":[
                "data sources"
             ],
             "summary":"Test New Datasource",
             "description":"tests a datasource configuration and returns the processed\ndata, will only process the first page of the source\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **body**: a DatasourceCreate object",
             "operationId":"test_new_datasource_company__company_id__data_sources_test_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/DatasourceCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/data-source/{data_source_id}":{
          "get":{
             "tags":[
                "data sources"
             ],
             "summary":"Get",
             "description":"get a datasource for a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **data_source_id**: id of the datasource",
             "operationId":"get_company__company_id__data_source__data_source_id__get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Data Source Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"data_source_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/DatasourceGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "delete":{
             "tags":[
                "data sources"
             ],
             "summary":"Delete",
             "description":"delete a datasource for a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **data_source_id**: id of the datasource",
             "operationId":"delete_company__company_id__data_source__data_source_id__delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Data Source Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"data_source_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/data-source/{data_source_id}/test":{
          "get":{
             "tags":[
                "data sources"
             ],
             "summary":"Test Existing Datasource",
             "description":"tests an existing datasource configuration and returns the processed\ndata, will only process the first page of the source\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **data_source_id**: id of the datasource",
             "operationId":"test_existing_datasource_company__company_id__data_source__data_source_id__test_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Data Source Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"data_source_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/data-source/{data_source_id}/run":{
          "post":{
             "tags":[
                "data sources"
             ],
             "summary":"Run Existing Datasource",
             "description":"tests an existing datasource configuration and returns the processed\ndata, will only process the first page of the source\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **data_source_id**: id of the datasource",
             "operationId":"run_existing_datasource_company__company_id__data_source__data_source_id__run_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Data Source Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"data_source_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/data-source/{data_source_id}/import-runs":{
          "get":{
             "tags":[
                "data sources"
             ],
             "summary":"Get Import Runs",
             "description":"get a list of all import runs of a datasource\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **data_source_id**: id of the datasource",
             "operationId":"get_import_runs_company__company_id__data_source__data_source_id__import_runs_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Data Source Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"data_source_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get Import Runs Company  Company Id  Data Source  Data Source Id  Import Runs Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/DatasourceImportRunGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/invites":{
          "put":{
             "tags":[
                "company members"
             ],
             "summary":"Invite",
             "description":"add a list of users to a company via email, if there is no user with a\ngiven email, they will be invited\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **body**: a list of CompanyMemberInvite objects",
             "operationId":"invite_company__company_id__invites_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Invites",
                         "type":"array",
                         "items":{
                            "$ref":"#/components/schemas/CompanyMemberInvite"
                         }
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/members":{
          "get":{
             "tags":[
                "company members"
             ],
             "summary":"Get All",
             "description":"get all members of a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company",
             "operationId":"get_all_company__company_id__members_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get All Company  Company Id  Members Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/CompanyMemberGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "company members"
             ],
             "summary":"Add",
             "description":"add a list of existing users to a company via user_id\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **body**: a list of CompanyMemberAdd objects",
             "operationId":"add_company__company_id__members_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Users",
                         "type":"array",
                         "items":{
                            "$ref":"#/components/schemas/CompanyMemberAdd"
                         }
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/member/me":{
          "post":{
             "tags":[
                "company members"
             ],
             "summary":"Add Self To Company",
             "description":"get a user that is a member of a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **user_id**: id of the user",
             "operationId":"add_self_to_company_company__company_id__member_me_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CompanyMemberGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/member/{user_id}":{
          "get":{
             "tags":[
                "company members"
             ],
             "summary":"Get",
             "description":"get a user that is a member of a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **user_id**: id of the user",
             "operationId":"get_company__company_id__member__user_id__get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CompanyMemberGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "delete":{
             "tags":[
                "company members"
             ],
             "summary":"Delete",
             "description":"remove a user from a company\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **user_id**: id of the user",
             "operationId":"delete_company__company_id__member__user_id__delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "patch":{
             "tags":[
                "company members"
             ],
             "summary":"Patch",
             "description":"update a company member\n- *access:* the authenticated admin of the company\n- **company_id**: id of the company\n- **user_id**: id of the user\n- **company_member_update**: a CompanyMemberUpdate object",
             "operationId":"patch_company__company_id__member__user_id__patch",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/CompanyMemberUpdate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CompanyMemberGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/contributors":{
          "get":{
             "tags":[
                "goal contributors"
             ],
             "summary":"Get Contributors",
             "description":"get a list of all goal contributors for a goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"get_contributors_goal__goal_id__contributors_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get Contributors Goal  Goal Id  Contributors Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/GoalParticipantGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "goal contributors"
             ],
             "summary":"Add Contributor",
             "description":"add a list of existing users with their user_id\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **body**: a list of GoalParticipantCreate objects",
             "operationId":"add_contributor_goal__goal_id__contributors_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Contributors",
                         "type":"array",
                         "items":{
                            "$ref":"#/components/schemas/GoalParticipantCreate"
                         }
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Add Contributor Goal  Goal Id  Contributors Post",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/GoalParticipantGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/contributor/{user_id}":{
          "get":{
             "tags":[
                "goal contributors"
             ],
             "summary":"Get Contributor",
             "description":"get a single goal contributor of a goal\n- *access:* the authenticated admin of the company this goal belongs to or the contributor themselves\n- **goal_id**: the id of the goal\n- **user_id**: user id of the contributor",
             "operationId":"get_contributor_goal__goal_id__contributor__user_id__get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GoalParticipantGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/invites":{
          "put":{
             "tags":[
                "goal contributors"
             ],
             "summary":"Invite Contributors",
             "description":"invite a list of users with an email, if the user does not exist they will be created\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **body**: a list of GoalParticipantInvite objects",
             "operationId":"invite_contributors_goal__goal_id__invites_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Invites",
                         "type":"array",
                         "items":{
                            "$ref":"#/components/schemas/GoalParticipantInvite"
                         }
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GoalInviteResult"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/invites/csv":{
          "put":{
             "tags":[
                "goal contributors"
             ],
             "summary":"Invite Contributors Csv",
             "description":"invite a csv list of users with an email, if the user does not exist they will be created\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **body**: a csv file",
             "operationId":"invite_contributors_csv_goal__goal_id__invites_csv_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "multipart/form-data":{
                      "schema":{
                         "$ref":"#/components/schemas/Body_invite_contributors_csv_goal__goal_id__invites_csv_put"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GoalInviteResult"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/contributor/tokens":{
          "put":{
             "tags":[
                "goal contributors"
             ],
             "summary":"Add Tokens",
             "description":"distribute tokens to a goal contributor\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **body**: a list of GoalParticipantTokens objects",
             "operationId":"add_tokens_goal__goal_id__contributor_tokens_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Contributor Tokens",
                         "type":"array",
                         "items":{
                            "$ref":"#/components/schemas/GoalParticipantTokens"
                         }
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Add Tokens Goal  Goal Id  Contributor Tokens Put",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/OfferedTokensGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/contributor/tokens/csv":{
          "put":{
             "tags":[
                "goal contributors"
             ],
             "summary":"Add Tokens Csv",
             "description":"distribute tokens to a csv list of users with an email\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **body**: a csv file",
             "operationId":"add_tokens_csv_goal__goal_id__contributor_tokens_csv_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "multipart/form-data":{
                      "schema":{
                         "$ref":"#/components/schemas/Body_add_tokens_csv_goal__goal_id__contributor_tokens_csv_put"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Add Tokens Csv Goal  Goal Id  Contributor Tokens Csv Put",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/OfferedTokensGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/contributor/contributions":{
          "put":{
             "tags":[
                "goal contributors"
             ],
             "summary":"Add Contributions",
             "description":"distribute tokens via contributions to a goal contributor\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **body**: a list of GoalParticipantContribution objects",
             "operationId":"add_contributions_goal__goal_id__contributor_contributions_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Contributor Contributions",
                         "type":"array",
                         "items":{
                            "$ref":"#/components/schemas/GoalParticipantContribution"
                         }
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Add Contributions Goal  Goal Id  Contributor Contributions Put",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/OfferedTokensGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/contributor/contributions/csv":{
          "put":{
             "tags":[
                "goal contributors"
             ],
             "summary":"Add Contributions Csv",
             "description":"distribute tokens via contributions to a csv list of users with an email\n- *access:* the authenticated admins of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **body**: a csv file",
             "operationId":"add_contributions_csv_goal__goal_id__contributor_contributions_csv_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "multipart/form-data":{
                      "schema":{
                         "$ref":"#/components/schemas/Body_add_contributions_csv_goal__goal_id__contributor_contributions_csv_put"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Add Contributions Csv Goal  Goal Id  Contributor Contributions Csv Put",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/OfferedTokensGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/invite-codes":{
          "get":{
             "tags":[
                "goal invitecodes"
             ],
             "summary":"Get All",
             "description":"get all invite codes for a goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"get_all_goal__goal_id__invite_codes_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get All Goal  Goal Id  Invite Codes Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/GoalInviteCodeGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "goal invitecodes"
             ],
             "summary":"Add",
             "description":"create an invite code for a goal, only one invite code per goal is allowed\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"add_goal__goal_id__invite_codes_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GoalInviteCodeGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/invite-code/{invite_code}":{
          "delete":{
             "tags":[
                "goal invitecodes"
             ],
             "summary":"Delete",
             "description":"delete an invite code for a goal\n- *access:* the authenticated admin of the company the invite codes goal belongs to\n- **invite_code**: the invite code",
             "operationId":"delete_invite_code__invite_code__delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Invite Code",
                      "type":"string"
                   },
                   "name":"invite_code",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/invite-code/{invite_code}/acceptance":{
          "post":{
             "tags":[
                "goal invitecodes"
             ],
             "summary":"Accept",
             "description":"accept an invite code for a goal\n- *access:* all authenticated users that know this code\n- **invite_code**: the invite code",
             "operationId":"accept_invite_code__invite_code__acceptance_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Invite Code",
                      "type":"string"
                   },
                   "name":"invite_code",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/marketing-data":{
          "get":{
             "tags":[
                "goal marketing data"
             ],
             "summary":"Get All",
             "description":"get marketing data for a goal\n- *access:* the co-owners of the goal\n- **goal_id**: the id of the goal",
             "operationId":"get_all_goal__goal_id__marketing_data_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get All Goal  Goal Id  Marketing Data Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/GoalMarketingDataGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "goal marketing data"
             ],
             "summary":"Create",
             "description":"create marketing data for a goal\n- *access:* OwnCo admin\n- **goal_id**: the id of the goal\n- **body**: the data to create",
             "operationId":"create_goal__goal_id__marketing_data_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Body",
                         "anyOf":[
                            {
                               "$ref":"#/components/schemas/MarketingDataJourney"
                            },
                            {
                               "$ref":"#/components/schemas/MarketingDataDescription"
                            },
                            {
                               "$ref":"#/components/schemas/MarketingDataFAQS"
                            },
                            {
                               "$ref":"#/components/schemas/MarketingDataFounderMessage"
                            }
                         ]
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/document/{document_id}":{
          "get":{
             "tags":[
                "goal documents"
             ],
             "summary":"Get",
             "description":"get a document of a goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **document_id**: the id of the document",
             "operationId":"get_goal__goal_id__document__document_id__get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Document Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"document_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/document/{document_id}/details":{
          "get":{
             "tags":[
                "goal documents"
             ],
             "summary":"Get Document Details",
             "description":"get the details of a document of a goal\n- *access:* the authenticated admin of the company this goal belongs to or a member of this goal\n- **goal_id**: the id of the goal\n- **document_id**: the id of the document",
             "operationId":"get_document_details_goal__goal_id__document__document_id__details_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Document Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"document_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GoalDocumentGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/documents":{
          "get":{
             "tags":[
                "goal documents"
             ],
             "summary":"Get All",
             "description":"get the details of all document of a goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"get_all_goal__goal_id__documents_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get All Goal  Goal Id  Documents Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/GoalDocumentGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "goal documents"
             ],
             "summary":"Create",
             "description":"create a new document for a goal\n- *access:* the role rekursive_admin\n- **goal_id**: the id of the goal\n- **body**: a file",
             "operationId":"create_goal__goal_id__documents_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "multipart/form-data":{
                      "schema":{
                         "$ref":"#/components/schemas/Body_create_goal__goal_id__documents_post"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/GoalDocumentGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{user_id}/offered-tokens":{
          "get":{
             "tags":[
                "offered tokens"
             ],
             "summary":"All For Coowner",
             "description":"get all offered tokens for a user\n- *access:* the authenticated user themselves\n- **user_id**: user id of the user",
             "operationId":"all_for_coowner_user__user_id__offered_tokens_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "anyOf":[
                         {
                            "type":"string",
                            "format":"uuid"
                         },
                         {
                            "enum":[
                               "me"
                            ],
                            "type":"string"
                         }
                      ]
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response All For Coowner User  User Id  Offered Tokens Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/OfferedTokensGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{user_id}/offered-tokens/{offered_tokens_id}/acceptance":{
          "post":{
             "tags":[
                "offered tokens"
             ],
             "summary":"Coowner Accept",
             "description":"accept a token offer by a company\n- *access:* the authenticated user themselves\n- **user_id**: user id of the user\n- **offered_tokens_id**: the id of the offer",
             "operationId":"coowner_accept_user__user_id__offered_tokens__offered_tokens_id__acceptance_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Offered Tokens Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"offered_tokens_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/OfferedTokensGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{user_id}/offered-tokens/{offered_tokens_id}/rejection":{
          "post":{
             "tags":[
                "offered tokens"
             ],
             "summary":"Coowner Reject",
             "description":"reject a token offer by a company\n- *access:* the authenticated user themselves\n- **user_id**: user id of the user\n- **offered_tokens_id**: the id of the offer",
             "operationId":"coowner_reject_user__user_id__offered_tokens__offered_tokens_id__rejection_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Offered Tokens Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"offered_tokens_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/OfferedTokensGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/offered-tokens":{
          "get":{
             "tags":[
                "offered tokens"
             ],
             "summary":"All For Goal",
             "description":"get all token offers for a goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"all_for_goal_goal__goal_id__offered_tokens_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response All For Goal Goal  Goal Id  Offered Tokens Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/OfferedTokensGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/offered-tokens/{offered_tokens_id}/approval":{
          "post":{
             "tags":[
                "offered tokens"
             ],
             "summary":"Company Approve",
             "description":"approve an automatically created token for a user\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **offered_tokens_id**: the id of the offer",
             "operationId":"company_approve_goal__goal_id__offered_tokens__offered_tokens_id__approval_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Offered Tokens Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"offered_tokens_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/OfferedTokensGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/offered-tokens/{offered_tokens_id}/rejection":{
          "post":{
             "tags":[
                "offered tokens"
             ],
             "summary":"Company Reject",
             "description":"reject an automatically created token for a user\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **offered_tokens_id**: the id of the offer",
             "operationId":"company_reject_goal__goal_id__offered_tokens__offered_tokens_id__rejection_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Offered Tokens Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"offered_tokens_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/OfferedTokensGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/storage/upload":{
          "post":{
             "tags":[
                "storage"
             ],
             "summary":"Upload",
             "description":"uploads a file to the storage\n- *access:* all authenticated users\n- **body**: a file",
             "operationId":"upload_storage_upload_post",
             "requestBody":{
                "content":{
                   "multipart/form-data":{
                      "schema":{
                         "$ref":"#/components/schemas/Body_upload_storage_upload_post"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/UploadResult"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/evaluator":{
          "get":{
             "tags":[
                "evaluator config"
             ],
             "summary":"Get",
             "description":"get the evaluator for the goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"get_goal__goal_id__evaluator_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/EvaluatorConfigGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "put":{
             "tags":[
                "evaluator config"
             ],
             "summary":"Put",
             "description":"create the evaluator for the goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal\n- **body**: a EvaluatorConfig object",
             "operationId":"put_goal__goal_id__evaluator_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/EvaluatorConfigCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/EvaluatorConfigGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "delete":{
             "tags":[
                "evaluator config"
             ],
             "summary":"Delete",
             "description":"delete the evaluator for the goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"delete_goal__goal_id__evaluator_delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/evaluator/run":{
          "post":{
             "tags":[
                "evaluator config"
             ],
             "summary":"Run Evaluator",
             "description":"delete the evaluator for the goal\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"run_evaluator_goal__goal_id__evaluator_run_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/evaluator-runs":{
          "get":{
             "tags":[
                "evaluator config"
             ],
             "summary":"Get Runs",
             "description":"get a list of all runs of an evaluator\n- *access:* the authenticated admin of the company this goal belongs to\n- **goal_id**: the id of the goal",
             "operationId":"get_runs_goal__goal_id__evaluator_runs_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                },
                {
                   "required":false,
                   "schema":{
                      "title":"Offset",
                      "type":"integer",
                      "default":0
                   },
                   "name":"offset",
                   "in":"query"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get Runs Goal  Goal Id  Evaluator Runs Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/EvaluatorRunGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/health":{
          "get":{
             "tags":[
                "health"
             ],
             "summary":"Get",
             "description":"get health information about the user api\n- *access:* secret key for health endpoints",
             "operationId":"get_health_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Key",
                      "type":"string"
                   },
                   "name":"key",
                   "in":"query"
                },
                {
                   "required":false,
                   "schema":{
                      "title":"Simple",
                      "type":"boolean",
                      "default":false
                   },
                   "name":"simple",
                   "in":"query"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             }
          }
       },
       "/company/{company_id}/secrets":{
          "get":{
             "tags":[
                "secrets"
             ],
             "summary":"Get Secrets",
             "operationId":"get_secrets_company__company_id__secrets_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get Secrets Company  Company Id  Secrets Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/SecretGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "secrets"
             ],
             "summary":"Create Secret",
             "operationId":"create_secret_company__company_id__secrets_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/SecretCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/SecretGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/company/{company_id}/secret/{secret_id}":{
          "delete":{
             "tags":[
                "secrets"
             ],
             "summary":"Delete Secret",
             "operationId":"delete_secret_company__company_id__secret__secret_id__delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Company Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"company_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Secret Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"secret_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             }
          }
       },
       "/goal/{goal_id}/contributions":{
          "get":{
             "tags":[
                "contributions"
             ],
             "summary":"Get All",
             "description":"create an contribution\n- *access:* goal owner",
             "operationId":"get_all_goal__goal_id__contributions_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get All Goal  Goal Id  Contributions Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/ContributionGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "put":{
             "tags":[
                "contributions"
             ],
             "summary":"Put All",
             "description":"updates the list of contributions, including adding, removing and editing items\n- *access:* goal owner\n- **body**: a List of ContributionCreate objects",
             "operationId":"put_all_goal__goal_id__contributions_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Contributions Update",
                         "type":"array",
                         "items":{
                            "$ref":"#/components/schemas/ContributionUpdate"
                         }
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Put All Goal  Goal Id  Contributions Put",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/ContributionGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "contributions"
             ],
             "summary":"Create",
             "description":"create an contribution\n- *access:* goal owner\n- **body**: a ContributionCreate object",
             "operationId":"create_goal__goal_id__contributions_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/ContributionCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContributionGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/contribution/{contribution_id}":{
          "delete":{
             "tags":[
                "contributions"
             ],
             "summary":"Delete",
             "description":"update an contribution\n- *access:* goal owner\n- **body**: a ContributionCreate object",
             "operationId":"delete_goal__goal_id__contribution__contribution_id__delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Contribution Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"contribution_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "patch":{
             "tags":[
                "contributions"
             ],
             "summary":"Update",
             "description":"update an contribution\n- *access:* goal owner\n- **body**: a ContributionUpdate object",
             "operationId":"update_goal__goal_id__contribution__contribution_id__patch",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Contribution Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"contribution_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/ContributionUpdate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContributionGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/goal/{goal_id}/contribution/{contribution_id}/submissions":{
          "get":{
             "tags":[
                "contribution-submissions"
             ],
             "summary":"All For Goal",
             "description":"create an contribution\n- *access:* goal owner",
             "operationId":"all_for_goal_goal__goal_id__contribution__contribution_id__submissions_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response All For Goal Goal  Goal Id  Contribution  Contribution Id  Submissions Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/ContributionSubmissionGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "post":{
             "tags":[
                "contribution-submissions"
             ],
             "summary":"Create",
             "description":"create an contribution submission\n- *access:* goal member\n- **body**: a ContributionSubmissionCreate object",
             "operationId":"create_goal__goal_id__contribution__contribution_id__submissions_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                },
                {
                   "required":true,
                   "schema":{
                      "title":"Contribution Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"contribution_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/ContributionSubmissionCreate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContributionSubmissionGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{user_id}/contribution-submissions":{
          "get":{
             "tags":[
                "contribution-submissions"
             ],
             "summary":"All For User",
             "description":"create an contribution\n- *access:* goal owner",
             "operationId":"all_for_user_user__user_id__contribution_submissions_get",
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response All For User User  User Id  Contribution Submissions Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/ContributionSubmissionGet"
                            }
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/submission/{submission_id}":{
          "delete":{
             "tags":[
                "contribution-submissions"
             ],
             "summary":"Delete Submission",
             "operationId":"delete_submission_submission__submission_id__delete",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Submission Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"submission_id",
                   "in":"path"
                }
             ],
             "responses":{
                "204":{
                   "description":"Successful Response"
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          },
          "patch":{
             "tags":[
                "contribution-submissions"
             ],
             "summary":"Update Submission",
             "description":"update an contribution submission\n- *access:* contribution submitter",
             "operationId":"update_submission_submission__submission_id__patch",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Submission Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"submission_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/ContributionSubmissionUpdate"
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContributionSubmissionGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/submission/{submission_id}/approval":{
          "put":{
             "tags":[
                "contribution-submissions"
             ],
             "summary":"Approve Submission",
             "operationId":"approve_submission_submission__submission_id__approval_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Submission Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"submission_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContributionSubmissionGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/submission/{submission_id}/rejection":{
          "put":{
             "tags":[
                "contribution-submissions"
             ],
             "summary":"Reject Submission",
             "operationId":"reject_submission_submission__submission_id__rejection_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Submission Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"submission_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContributionSubmissionGet"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/dev/goal/{goal_id}/invites":{
          "put":{
             "tags":[
                "dev"
             ],
             "summary":"Invite Contributor In The Past",
             "description":"invite a list of users to a goal, can mock time, only for dev\n- *access:* the role dev\n- **goal_id**: the id of the goal\n- **body**: a list of GoalParticipantInviteDev object",
             "operationId":"invite_contributor_in_the_past_dev_goal__goal_id__invites_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Invites",
                         "type":"array",
                         "items":{
                            "$ref":"#/components/schemas/GoalParticipantInviteDev"
                         }
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/dev/goal/{goal_id}/contributor/tokens":{
          "put":{
             "tags":[
                "dev"
             ],
             "summary":"Dev Add Tokens",
             "description":"give tokens to a list of goal contributors, can mock time, only for dev\n- *access:* the role dev\n- **goal_id**: the id of the goal\n- **body**: a list of GoalParticipantTokensInternal object",
             "operationId":"dev_add_tokens_dev_goal__goal_id__contributor_tokens_put",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Goal Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"goal_id",
                   "in":"path"
                },
                {
                   "required":false,
                   "schema":{
                      "title":"Require Company Approval",
                      "type":"boolean",
                      "default":false
                   },
                   "name":"require_company_approval",
                   "in":"query"
                }
             ],
             "requestBody":{
                "content":{
                   "application/json":{
                      "schema":{
                         "title":"Contributor Tokens",
                         "type":"array",
                         "items":{
                            "$ref":"#/components/schemas/GoalParticipantTokensInternal"
                         }
                      }
                   }
                },
                "required":true
             },
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Dev Add Tokens Dev Goal  Goal Id  Contributor Tokens Put",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/OfferedTokensGet"
                            }
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/dev/user/{user_id}/demo-accounts":{
          "post":{
             "tags":[
                "dev"
             ],
             "summary":"Dev Create Demo Account",
             "description":"add demo account for a user, only for dev\n- *access:* Rekursive admin\n- **user_id**: the uuid of the user",
             "operationId":"dev_create_demo_account_dev_user__user_id__demo_accounts_post",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"User Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"user_id",
                   "in":"path"
                }
             ],
             "responses":{
                "201":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             },
             "security":[
                {
                   "Auth":[
                      
                   ]
                }
             ]
          }
       },
       "/demo-accounts":{
          "get":{
             "tags":[
                "demo accounts"
             ],
             "summary":"Get All",
             "operationId":"get_all_demo_accounts_get",
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "title":"Response Get All Demo Accounts Get",
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/DemoAccountGet"
                            }
                         }
                      }
                   }
                }
             }
          }
       },
       "/demo-account/{demo_account_id}/oauth-token":{
          "get":{
             "tags":[
                "demo accounts"
             ],
             "summary":"Get Token",
             "description":"get a jwt for the demo account\n- *access:* public",
             "operationId":"get_token_demo_account__demo_account_id__oauth_token_get",
             "parameters":[
                {
                   "required":true,
                   "schema":{
                      "title":"Demo Account Id",
                      "type":"string",
                      "format":"uuid"
                   },
                   "name":"demo_account_id",
                   "in":"path"
                }
             ],
             "responses":{
                "200":{
                   "description":"Successful Response",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/OAuthToken"
                         }
                      }
                   }
                },
                "422":{
                   "description":"Validation Error",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/HTTPValidationError"
                         }
                      }
                   }
                }
             }
          }
       },
       "/":{
          "get":{
             "summary":"Redirect Fastapi",
             "operationId":"redirect_fastapi__get",
             "responses":{
                "307":{
                   "description":"Successful Response"
                }
             }
          }
       }
    },
    "components":{
       "schemas":{
          "ApiTokenCreate":{
             "title":"ApiTokenCreate",
             "required":[
                "name"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "ApiTokenCreateGet":{
             "title":"ApiTokenCreateGet",
             "required":[
                "name",
                "id",
                "token_last_four",
                "key"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "token_last_four":{
                   "title":"Token Last Four",
                   "type":"string"
                },
                "key":{
                   "title":"Key",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "ApiTokenGet":{
             "title":"ApiTokenGet",
             "required":[
                "name",
                "id",
                "token_last_four"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "token_last_four":{
                   "title":"Token Last Four",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "Body_add_contributions_csv_goal__goal_id__contributor_contributions_csv_put":{
             "title":"Body_add_contributions_csv_goal__goal_id__contributor_contributions_csv_put",
             "required":[
                "file"
             ],
             "type":"object",
             "properties":{
                "file":{
                   "title":"File",
                   "type":"string",
                   "format":"binary"
                }
             }
          },
          "Body_add_tokens_csv_goal__goal_id__contributor_tokens_csv_put":{
             "title":"Body_add_tokens_csv_goal__goal_id__contributor_tokens_csv_put",
             "required":[
                "file"
             ],
             "type":"object",
             "properties":{
                "file":{
                   "title":"File",
                   "type":"string",
                   "format":"binary"
                }
             }
          },
          "Body_create_goal__goal_id__documents_post":{
             "title":"Body_create_goal__goal_id__documents_post",
             "required":[
                "name",
                "document_type",
                "file"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "document_type":{
                   "$ref":"#/components/schemas/GoalDocumentType"
                },
                "file":{
                   "title":"File",
                   "type":"string",
                   "format":"binary"
                }
             }
          },
          "Body_invite_contributors_csv_goal__goal_id__invites_csv_put":{
             "title":"Body_invite_contributors_csv_goal__goal_id__invites_csv_put",
             "required":[
                "file"
             ],
             "type":"object",
             "properties":{
                "file":{
                   "title":"File",
                   "type":"string",
                   "format":"binary"
                }
             }
          },
          "Body_upload_storage_upload_post":{
             "title":"Body_upload_storage_upload_post",
             "required":[
                "file"
             ],
             "type":"object",
             "properties":{
                "file":{
                   "title":"File",
                   "type":"string",
                   "format":"binary"
                }
             }
          },
          "CSVImportError":{
             "title":"CSVImportError",
             "required":[
                "index",
                "error_code"
             ],
             "type":"object",
             "properties":{
                "index":{
                   "title":"Index",
                   "type":"integer",
                   "gte":0
                },
                "error_code":{
                   "title":"Error Code",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "CommunityPageCreate":{
             "title":"CommunityPageCreate",
             "type":"object",
             "properties":{
                "domain":{
                   "title":"Domain",
                   "type":"string"
                },
                "published_status":{
                   "$ref":"#/components/schemas/PublishedStatus"
                },
                "hero_image":{
                   "title":"Hero Image",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "support_email":{
                   "title":"Support Email",
                   "type":"string",
                   "format":"email"
                },
                "company_logo":{
                   "title":"Company Logo",
                   "type":"string"
                },
                "homepage":{
                   "title":"Homepage",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "primary_color":{
                   "title":"Primary Color",
                   "type":"string",
                   "default":"#111111"
                },
                "secondary_color":{
                   "title":"Secondary Color",
                   "type":"string",
                   "default":"#000000"
                },
                "cta_displayed":{
                   "title":"Cta Displayed",
                   "type":"boolean",
                   "default":true
                },
                "cta_text":{
                   "title":"Cta Text",
                   "type":"string",
                   "default":"Sign up"
                },
                "cta_link":{
                   "title":"Cta Link",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "headline":{
                   "title":"Headline",
                   "type":"string"
                },
                "subheadline":{
                   "title":"Subheadline",
                   "type":"string"
                },
                "vision_displayed":{
                   "title":"Vision Displayed",
                   "type":"boolean",
                   "default":true
                },
                "vision_heading":{
                   "title":"Vision Heading",
                   "type":"string",
                   "default":"## Vision"
                },
                "vision":{
                   "title":"Vision",
                   "type":"string"
                },
                "founder_quote_displayed":{
                   "title":"Founder Quote Displayed",
                   "type":"boolean",
                   "default":true
                },
                "founder_avatar":{
                   "title":"Founder Avatar",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "founder_title":{
                   "title":"Founder Title",
                   "type":"string"
                },
                "founder_name":{
                   "title":"Founder Name",
                   "type":"string"
                },
                "founder_quote":{
                   "title":"Founder Quote",
                   "type":"string"
                },
                "how_displayed":{
                   "title":"How Displayed",
                   "type":"boolean",
                   "default":true
                },
                "how":{
                   "title":"How",
                   "type":"string",
                   "default":"Explanation of the asset:\n\n1. Exit proceeds are a form of ownership. Essentially, you are entitled to a cash payout if the company sells, goes public, or someone decides to buy the asset from you.\n2. Revenue share: the token represents a claim on revenue share and can be cashed out at the end of the pilot. It also grants you a claim on profit sharing each year*.\n  a. Explanation of how to receive tokens\n  b. Explanation of what happens at the end of the pilot"
                },
                "how_heading":{
                   "title":"How Heading",
                   "type":"string",
                   "default":"## How will it work?"
                },
                "what_displayed":{
                   "title":"What Displayed",
                   "type":"boolean",
                   "default":true
                },
                "what":{
                   "title":"What",
                   "type":"string"
                },
                "what_heading":{
                   "title":"What Heading",
                   "type":"string",
                   "default":"## What ownership means"
                },
                "goal_displayed":{
                   "title":"Goal Displayed",
                   "type":"boolean",
                   "default":true
                },
                "goal_heading":{
                   "title":"Goal Heading",
                   "type":"string",
                   "default":"## Company goal"
                },
                "goal":{
                   "title":"Goal",
                   "type":"string",
                   "default":"Become community owned. Our goal as a company is to create the best environment where people can thrive - and share in the success of the Company.\nGrowth and expansion. We want to expand our locations and attract the best trainers to work with us, all over the United States."
                },
                "timeline_displayed":{
                   "title":"Timeline Displayed",
                   "type":"boolean",
                   "default":true
                },
                "timeline":{
                   "title":"Timeline",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/TimelineStep"
                   },
                   "default":[
                      {
                         "title":"Launch",
                         "time_period":"Month1",
                         "description":"Pilot is announced and everyone recei ves tokens to start (airdrop)."
                      },
                      {
                         "title":"Live",
                         "time_period":"Month 1-5",
                         "description":"Now is the time to develop and lead new projects resulting in new revenue."
                      },
                      {
                         "title":"Closing",
                         "time_period":"Month 6",
                         "description":"This is the cut-off for deals to close from the Live period and be rewarded."
                      },
                      {
                         "title":"Review",
                         "time_period":"Month 6",
                         "description":"We will review the impact of the programme and consider future goals."
                      }
                   ]
                },
                "ownership_displayed":{
                   "title":"Ownership Displayed",
                   "type":"boolean",
                   "default":true
                },
                "ownership_heading":{
                   "title":"Ownership Heading",
                   "type":"string",
                   "default":"## Community-company ownership relation"
                },
                "ownership":{
                   "title":"Ownership",
                   "type":"string"
                },
                "ownership_labels":{
                   "title":"Ownership Labels",
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "faq_displayed":{
                   "title":"Faq Displayed",
                   "type":"boolean",
                   "default":true
                },
                "faqs":{
                   "title":"Faqs",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/schemas__community_page__FAQ"
                   }
                },
                "text_color":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/TextColor"
                      }
                   ],
                   "default":"dark"
                },
                "timeline_heading":{
                   "title":"Timeline Heading",
                   "type":"string"
                },
                "timeline_subheading":{
                   "title":"Timeline Subheading",
                   "type":"string"
                },
                "callout_heading":{
                   "title":"Callout Heading",
                   "type":"string"
                },
                "callout_subheading":{
                   "title":"Callout Subheading",
                   "type":"string"
                },
                "callout_displayed":{
                   "title":"Callout Displayed",
                   "type":"boolean",
                   "default":true
                }
             },
             "additionalProperties":false
          },
          "CommunityPageGet":{
             "title":"CommunityPageGet",
             "required":[
                "id"
             ],
             "type":"object",
             "properties":{
                "domain":{
                   "title":"Domain",
                   "type":"string"
                },
                "published_status":{
                   "$ref":"#/components/schemas/PublishedStatus"
                },
                "hero_image":{
                   "title":"Hero Image",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "support_email":{
                   "title":"Support Email",
                   "type":"string",
                   "format":"email"
                },
                "company_logo":{
                   "title":"Company Logo",
                   "type":"string"
                },
                "homepage":{
                   "title":"Homepage",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "primary_color":{
                   "title":"Primary Color",
                   "type":"string",
                   "default":"#111111"
                },
                "secondary_color":{
                   "title":"Secondary Color",
                   "type":"string",
                   "default":"#000000"
                },
                "cta_displayed":{
                   "title":"Cta Displayed",
                   "type":"boolean",
                   "default":true
                },
                "cta_text":{
                   "title":"Cta Text",
                   "type":"string",
                   "default":"Sign up"
                },
                "cta_link":{
                   "title":"Cta Link",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "headline":{
                   "title":"Headline",
                   "type":"string"
                },
                "subheadline":{
                   "title":"Subheadline",
                   "type":"string"
                },
                "vision_displayed":{
                   "title":"Vision Displayed",
                   "type":"boolean",
                   "default":true
                },
                "vision_heading":{
                   "title":"Vision Heading",
                   "type":"string",
                   "default":"## Vision"
                },
                "vision":{
                   "title":"Vision",
                   "type":"string"
                },
                "founder_quote_displayed":{
                   "title":"Founder Quote Displayed",
                   "type":"boolean",
                   "default":true
                },
                "founder_avatar":{
                   "title":"Founder Avatar",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "founder_title":{
                   "title":"Founder Title",
                   "type":"string"
                },
                "founder_name":{
                   "title":"Founder Name",
                   "type":"string"
                },
                "founder_quote":{
                   "title":"Founder Quote",
                   "type":"string"
                },
                "how_displayed":{
                   "title":"How Displayed",
                   "type":"boolean",
                   "default":true
                },
                "how":{
                   "title":"How",
                   "type":"string",
                   "default":"Explanation of the asset:\n\n1. Exit proceeds are a form of ownership. Essentially, you are entitled to a cash payout if the company sells, goes public, or someone decides to buy the asset from you.\n2. Revenue share: the token represents a claim on revenue share and can be cashed out at the end of the pilot. It also grants you a claim on profit sharing each year*.\n  a. Explanation of how to receive tokens\n  b. Explanation of what happens at the end of the pilot"
                },
                "how_heading":{
                   "title":"How Heading",
                   "type":"string",
                   "default":"## How will it work?"
                },
                "what_displayed":{
                   "title":"What Displayed",
                   "type":"boolean",
                   "default":true
                },
                "what":{
                   "title":"What",
                   "type":"string"
                },
                "what_heading":{
                   "title":"What Heading",
                   "type":"string",
                   "default":"## What ownership means"
                },
                "goal_displayed":{
                   "title":"Goal Displayed",
                   "type":"boolean",
                   "default":true
                },
                "goal_heading":{
                   "title":"Goal Heading",
                   "type":"string",
                   "default":"## Company goal"
                },
                "goal":{
                   "title":"Goal",
                   "type":"string",
                   "default":"Become community owned. Our goal as a company is to create the best environment where people can thrive - and share in the success of the Company.\nGrowth and expansion. We want to expand our locations and attract the best trainers to work with us, all over the United States."
                },
                "timeline_displayed":{
                   "title":"Timeline Displayed",
                   "type":"boolean",
                   "default":true
                },
                "timeline":{
                   "title":"Timeline",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/TimelineStep"
                   },
                   "default":[
                      {
                         "title":"Launch",
                         "time_period":"Month1",
                         "description":"Pilot is announced and everyone recei ves tokens to start (airdrop)."
                      },
                      {
                         "title":"Live",
                         "time_period":"Month 1-5",
                         "description":"Now is the time to develop and lead new projects resulting in new revenue."
                      },
                      {
                         "title":"Closing",
                         "time_period":"Month 6",
                         "description":"This is the cut-off for deals to close from the Live period and be rewarded."
                      },
                      {
                         "title":"Review",
                         "time_period":"Month 6",
                         "description":"We will review the impact of the programme and consider future goals."
                      }
                   ]
                },
                "ownership_displayed":{
                   "title":"Ownership Displayed",
                   "type":"boolean",
                   "default":true
                },
                "ownership_heading":{
                   "title":"Ownership Heading",
                   "type":"string",
                   "default":"## Community-company ownership relation"
                },
                "ownership":{
                   "title":"Ownership",
                   "type":"string"
                },
                "ownership_labels":{
                   "title":"Ownership Labels",
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "faq_displayed":{
                   "title":"Faq Displayed",
                   "type":"boolean",
                   "default":true
                },
                "faqs":{
                   "title":"Faqs",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/schemas__community_page__FAQ"
                   }
                },
                "text_color":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/TextColor"
                      }
                   ],
                   "default":"dark"
                },
                "timeline_heading":{
                   "title":"Timeline Heading",
                   "type":"string"
                },
                "timeline_subheading":{
                   "title":"Timeline Subheading",
                   "type":"string"
                },
                "callout_heading":{
                   "title":"Callout Heading",
                   "type":"string"
                },
                "callout_subheading":{
                   "title":"Callout Subheading",
                   "type":"string"
                },
                "callout_displayed":{
                   "title":"Callout Displayed",
                   "type":"boolean",
                   "default":true
                },
                "company_id":{
                   "title":"Company Id",
                   "type":"string",
                   "format":"uuid"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "goals":{
                   "title":"Goals",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/GoalGet"
                   }
                }
             },
             "additionalProperties":false
          },
          "CommunityPageUpdate":{
             "title":"CommunityPageUpdate",
             "type":"object",
             "properties":{
                "domain":{
                   "title":"Domain",
                   "type":"string"
                },
                "published_status":{
                   "$ref":"#/components/schemas/PublishedStatus"
                },
                "hero_image":{
                   "title":"Hero Image",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "support_email":{
                   "title":"Support Email",
                   "type":"string",
                   "format":"email"
                },
                "company_logo":{
                   "title":"Company Logo",
                   "type":"string"
                },
                "homepage":{
                   "title":"Homepage",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "primary_color":{
                   "title":"Primary Color",
                   "type":"string",
                   "default":"#111111"
                },
                "secondary_color":{
                   "title":"Secondary Color",
                   "type":"string",
                   "default":"#000000"
                },
                "cta_displayed":{
                   "title":"Cta Displayed",
                   "type":"boolean",
                   "default":true
                },
                "cta_text":{
                   "title":"Cta Text",
                   "type":"string",
                   "default":"Sign up"
                },
                "cta_link":{
                   "title":"Cta Link",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "headline":{
                   "title":"Headline",
                   "type":"string"
                },
                "subheadline":{
                   "title":"Subheadline",
                   "type":"string"
                },
                "vision_displayed":{
                   "title":"Vision Displayed",
                   "type":"boolean",
                   "default":true
                },
                "vision_heading":{
                   "title":"Vision Heading",
                   "type":"string",
                   "default":"## Vision"
                },
                "vision":{
                   "title":"Vision",
                   "type":"string"
                },
                "founder_quote_displayed":{
                   "title":"Founder Quote Displayed",
                   "type":"boolean",
                   "default":true
                },
                "founder_avatar":{
                   "title":"Founder Avatar",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "founder_title":{
                   "title":"Founder Title",
                   "type":"string"
                },
                "founder_name":{
                   "title":"Founder Name",
                   "type":"string"
                },
                "founder_quote":{
                   "title":"Founder Quote",
                   "type":"string"
                },
                "how_displayed":{
                   "title":"How Displayed",
                   "type":"boolean",
                   "default":true
                },
                "how":{
                   "title":"How",
                   "type":"string",
                   "default":"Explanation of the asset:\n\n1. Exit proceeds are a form of ownership. Essentially, you are entitled to a cash payout if the company sells, goes public, or someone decides to buy the asset from you.\n2. Revenue share: the token represents a claim on revenue share and can be cashed out at the end of the pilot. It also grants you a claim on profit sharing each year*.\n  a. Explanation of how to receive tokens\n  b. Explanation of what happens at the end of the pilot"
                },
                "how_heading":{
                   "title":"How Heading",
                   "type":"string",
                   "default":"## How will it work?"
                },
                "what_displayed":{
                   "title":"What Displayed",
                   "type":"boolean",
                   "default":true
                },
                "what":{
                   "title":"What",
                   "type":"string"
                },
                "what_heading":{
                   "title":"What Heading",
                   "type":"string",
                   "default":"## What ownership means"
                },
                "goal_displayed":{
                   "title":"Goal Displayed",
                   "type":"boolean",
                   "default":true
                },
                "goal_heading":{
                   "title":"Goal Heading",
                   "type":"string",
                   "default":"## Company goal"
                },
                "goal":{
                   "title":"Goal",
                   "type":"string",
                   "default":"Become community owned. Our goal as a company is to create the best environment where people can thrive - and share in the success of the Company.\nGrowth and expansion. We want to expand our locations and attract the best trainers to work with us, all over the United States."
                },
                "timeline_displayed":{
                   "title":"Timeline Displayed",
                   "type":"boolean",
                   "default":true
                },
                "timeline":{
                   "title":"Timeline",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/TimelineStep"
                   },
                   "default":[
                      {
                         "title":"Launch",
                         "time_period":"Month1",
                         "description":"Pilot is announced and everyone recei ves tokens to start (airdrop)."
                      },
                      {
                         "title":"Live",
                         "time_period":"Month 1-5",
                         "description":"Now is the time to develop and lead new projects resulting in new revenue."
                      },
                      {
                         "title":"Closing",
                         "time_period":"Month 6",
                         "description":"This is the cut-off for deals to close from the Live period and be rewarded."
                      },
                      {
                         "title":"Review",
                         "time_period":"Month 6",
                         "description":"We will review the impact of the programme and consider future goals."
                      }
                   ]
                },
                "ownership_displayed":{
                   "title":"Ownership Displayed",
                   "type":"boolean",
                   "default":true
                },
                "ownership_heading":{
                   "title":"Ownership Heading",
                   "type":"string",
                   "default":"## Community-company ownership relation"
                },
                "ownership":{
                   "title":"Ownership",
                   "type":"string"
                },
                "ownership_labels":{
                   "title":"Ownership Labels",
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "faq_displayed":{
                   "title":"Faq Displayed",
                   "type":"boolean",
                   "default":true
                },
                "faqs":{
                   "title":"Faqs",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/schemas__community_page__FAQ"
                   }
                },
                "text_color":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/TextColor"
                      }
                   ],
                   "default":"dark"
                },
                "timeline_heading":{
                   "title":"Timeline Heading",
                   "type":"string"
                },
                "timeline_subheading":{
                   "title":"Timeline Subheading",
                   "type":"string"
                },
                "callout_heading":{
                   "title":"Callout Heading",
                   "type":"string"
                },
                "callout_subheading":{
                   "title":"Callout Subheading",
                   "type":"string"
                },
                "callout_displayed":{
                   "title":"Callout Displayed",
                   "type":"boolean",
                   "default":true
                }
             },
             "additionalProperties":false
          },
          "CompanyAssetType":{
             "title":"CompanyAssetType",
             "enum":[
                "exit_proceeds",
                "revenue",
                "intellectual_property",
                "nft_collectibles",
                "lump_sum",
                "other"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "CompanyCreate":{
             "title":"CompanyCreate",
             "required":[
                "name",
                "token_name",
                "token_symbol",
                "asset_type",
                "asset_name",
                "asset_amount",
                "max_tokens",
                "support_email"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "marketing_data":{
                   "$ref":"#/components/schemas/CompanyMarketingData"
                },
                "token_name":{
                   "title":"Token Name",
                   "type":"string"
                },
                "token_symbol":{
                   "title":"Token Symbol",
                   "maxLength":4,
                   "minLength":3,
                   "pattern":"^[A-Z]+$",
                   "type":"string"
                },
                "asset_type":{
                   "$ref":"#/components/schemas/CompanyAssetType"
                },
                "asset_name":{
                   "title":"Asset Name",
                   "type":"string"
                },
                "asset_amount":{
                   "title":"Asset Amount",
                   "type":"number",
                   "lte":100.0,
                   "gte":0.0
                },
                "legal_name":{
                   "title":"Legal Name",
                   "type":"string"
                },
                "company_registration_number":{
                   "title":"Company Registration Number",
                   "type":"string"
                },
                "company_type":{
                   "title":"Company Type",
                   "type":"string"
                },
                "country":{
                   "title":"Country",
                   "type":"string"
                },
                "jurisdiction":{
                   "title":"Jurisdiction",
                   "type":"string"
                },
                "max_tokens":{
                   "title":"Max Tokens",
                   "exclusiveMinimum":0.0,
                   "type":"integer"
                },
                "support_email":{
                   "title":"Support Email",
                   "type":"string",
                   "format":"email"
                },
                "logo":{
                   "title":"Logo",
                   "type":"string"
                },
                "placeholder_goals":{
                   "title":"Placeholder Goals",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CompanyPlaceholderGoalCreate"
                   }
                }
             },
             "additionalProperties":false
          },
          "CompanyGet":{
             "title":"CompanyGet",
             "required":[
                "name",
                "token_name",
                "token_symbol",
                "asset_type",
                "asset_name",
                "asset_amount",
                "max_tokens",
                "support_email",
                "id",
                "roles"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "marketing_data":{
                   "$ref":"#/components/schemas/CompanyMarketingData"
                },
                "token_name":{
                   "title":"Token Name",
                   "type":"string"
                },
                "token_symbol":{
                   "title":"Token Symbol",
                   "maxLength":4,
                   "minLength":3,
                   "pattern":"^[A-Z]+$",
                   "type":"string"
                },
                "asset_type":{
                   "$ref":"#/components/schemas/CompanyAssetType"
                },
                "asset_name":{
                   "title":"Asset Name",
                   "type":"string"
                },
                "asset_amount":{
                   "title":"Asset Amount",
                   "type":"number",
                   "lte":100.0,
                   "gte":0.0
                },
                "legal_name":{
                   "title":"Legal Name",
                   "type":"string"
                },
                "company_registration_number":{
                   "title":"Company Registration Number",
                   "type":"string"
                },
                "company_type":{
                   "title":"Company Type",
                   "type":"string"
                },
                "country":{
                   "title":"Country",
                   "type":"string"
                },
                "jurisdiction":{
                   "title":"Jurisdiction",
                   "type":"string"
                },
                "max_tokens":{
                   "title":"Max Tokens",
                   "exclusiveMinimum":0.0,
                   "type":"integer"
                },
                "support_email":{
                   "title":"Support Email",
                   "type":"string",
                   "format":"email"
                },
                "logo":{
                   "title":"Logo",
                   "type":"string"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "placeholder_goals":{
                   "title":"Placeholder Goals",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CompanyPlaceholderGoalGet"
                   }
                },
                "community_page":{
                   "$ref":"#/components/schemas/CommunityPageGet"
                },
                "roles":{
                   "uniqueItems":true,
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CompanyMemberRole"
                   }
                }
             },
             "additionalProperties":false
          },
          "CompanyMarketingData":{
             "title":"CompanyMarketingData",
             "type":"object",
             "properties":{
                "about_photo":{
                   "title":"About Photo",
                   "type":"string"
                },
                "description":{
                   "title":"Description",
                   "type":"string"
                },
                "testimonials":{
                   "title":"Testimonials",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CompanyMarketingDataTestimonial"
                   }
                }
             },
             "additionalProperties":false
          },
          "CompanyMarketingDataTestimonial":{
             "title":"CompanyMarketingDataTestimonial",
             "type":"object",
             "properties":{
                "message":{
                   "title":"Message",
                   "type":"string"
                },
                "author":{
                   "title":"Author",
                   "type":"string"
                },
                "photo":{
                   "title":"Photo",
                   "type":"string"
                },
                "profession":{
                   "title":"Profession",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "CompanyMemberAdd":{
             "title":"CompanyMemberAdd",
             "required":[
                "user_id",
                "roles"
             ],
             "type":"object",
             "properties":{
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                },
                "roles":{
                   "uniqueItems":true,
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CompanyMemberRole"
                   }
                }
             },
             "additionalProperties":false
          },
          "CompanyMemberGet":{
             "title":"CompanyMemberGet",
             "required":[
                "id",
                "email"
             ],
             "type":"object",
             "properties":{
                "first_name":{
                   "title":"First Name",
                   "type":"string"
                },
                "last_name":{
                   "title":"Last Name",
                   "type":"string"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "tokens":{
                   "title":"Tokens",
                   "type":"integer",
                   "default":0
                },
                "roles":{
                   "uniqueItems":true,
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CompanyMemberRole"
                   },
                   "default":[
                      
                   ]
                },
                "email":{
                   "title":"Email",
                   "type":"string",
                   "format":"email"
                },
                "profile_image":{
                   "title":"Profile Image",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "CompanyMemberInvite":{
             "title":"CompanyMemberInvite",
             "required":[
                "email",
                "roles"
             ],
             "type":"object",
             "properties":{
                "email":{
                   "title":"Email",
                   "type":"string",
                   "format":"email"
                },
                "roles":{
                   "uniqueItems":true,
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CompanyMemberRole"
                   }
                }
             },
             "additionalProperties":false
          },
          "CompanyMemberRole":{
             "title":"CompanyMemberRole",
             "enum":[
                "owner",
                "admin",
                "contributor"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "CompanyMemberUpdate":{
             "title":"CompanyMemberUpdate",
             "required":[
                "roles"
             ],
             "type":"object",
             "properties":{
                "roles":{
                   "uniqueItems":true,
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CompanyMemberRole"
                   }
                }
             },
             "additionalProperties":false
          },
          "CompanyPlaceholderGoalCreate":{
             "title":"CompanyPlaceholderGoalCreate",
             "required":[
                "name"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "CompanyPlaceholderGoalGet":{
             "title":"CompanyPlaceholderGoalGet",
             "required":[
                "name",
                "id",
                "company_id"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "company_id":{
                   "title":"Company Id",
                   "type":"string",
                   "format":"uuid"
                }
             },
             "additionalProperties":false
          },
          "CompanyUpdate":{
             "title":"CompanyUpdate",
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "logo":{
                   "title":"Logo",
                   "type":"string"
                },
                "max_tokens":{
                   "title":"Max Tokens",
                   "type":"integer"
                },
                "legal_name":{
                   "title":"Legal Name",
                   "type":"string"
                },
                "company_registration_number":{
                   "title":"Company Registration Number",
                   "type":"string"
                },
                "support_email":{
                   "title":"Support Email",
                   "type":"string",
                   "format":"email"
                },
                "whitelabel_email":{
                   "title":"Whitelabel Email",
                   "type":"string"
                },
                "marketing_data":{
                   "$ref":"#/components/schemas/CompanyMarketingData"
                },
                "placeholder_goals":{
                   "title":"Placeholder Goals",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CompanyPlaceholderGoalCreate"
                   }
                }
             },
             "additionalProperties":false
          },
          "ContributionCreate":{
             "title":"ContributionCreate",
             "required":[
                "tokens",
                "name"
             ],
             "type":"object",
             "properties":{
                "target":{
                   "title":"Target",
                   "type":"integer",
                   "gte":0
                },
                "description":{
                   "title":"Description",
                   "type":"string"
                },
                "proof_label":{
                   "title":"Proof Label",
                   "type":"string"
                },
                "reward_worth":{
                   "title":"Reward Worth",
                   "type":"string"
                },
                "target_period_start":{
                   "title":"Target Period Start",
                   "type":"string",
                   "format":"date-time"
                },
                "target_period_end":{
                   "title":"Target Period End",
                   "type":"string",
                   "format":"date-time"
                },
                "active":{
                   "title":"Active",
                   "type":"boolean",
                   "default":true
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "tokens":{
                   "title":"Tokens",
                   "exclusiveMinimum":0.0,
                   "type":"integer"
                },
                "name":{
                   "title":"Name",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "ContributionGet":{
             "title":"ContributionGet",
             "required":[
                "tokens",
                "name",
                "id",
                "goal_id",
                "active",
                "completed"
             ],
             "type":"object",
             "properties":{
                "target":{
                   "title":"Target",
                   "type":"integer",
                   "gte":0
                },
                "description":{
                   "title":"Description",
                   "type":"string"
                },
                "proof_label":{
                   "title":"Proof Label",
                   "type":"string"
                },
                "reward_worth":{
                   "title":"Reward Worth",
                   "type":"string"
                },
                "target_period_start":{
                   "title":"Target Period Start",
                   "type":"string",
                   "format":"date-time"
                },
                "target_period_end":{
                   "title":"Target Period End",
                   "type":"string",
                   "format":"date-time"
                },
                "tokens":{
                   "title":"Tokens",
                   "exclusiveMinimum":0.0,
                   "type":"integer"
                },
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "goal_id":{
                   "title":"Goal Id",
                   "type":"string",
                   "format":"uuid"
                },
                "active":{
                   "title":"Active",
                   "type":"boolean"
                },
                "completed":{
                   "title":"Completed",
                   "type":"integer"
                },
                "submissions":{
                   "title":"Submissions",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/ContributionSubmissionGet"
                   }
                }
             },
             "additionalProperties":false
          },
          "ContributionSubmissionCreate":{
             "title":"ContributionSubmissionCreate",
             "type":"object",
             "properties":{
                "proof":{
                   "title":"Proof",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "ContributionSubmissionGet":{
             "title":"ContributionSubmissionGet",
             "required":[
                "id",
                "user_id",
                "contribution_id",
                "state",
                "date_added",
                "user"
             ],
             "type":"object",
             "properties":{
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                },
                "contribution_id":{
                   "title":"Contribution Id",
                   "type":"string",
                   "format":"uuid"
                },
                "state":{
                   "$ref":"#/components/schemas/ContributionSubmissionState"
                },
                "proof":{
                   "title":"Proof",
                   "type":"string"
                },
                "date_added":{
                   "title":"Date Added",
                   "type":"string",
                   "format":"date-time"
                },
                "user":{
                   "$ref":"#/components/schemas/UserGet"
                }
             },
             "additionalProperties":false
          },
          "ContributionSubmissionState":{
             "title":"ContributionSubmissionState",
             "enum":[
                "pending",
                "approved",
                "rejected"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "ContributionSubmissionUpdate":{
             "title":"ContributionSubmissionUpdate",
             "required":[
                "proof"
             ],
             "type":"object",
             "properties":{
                "proof":{
                   "title":"Proof",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "ContributionUpdate":{
             "title":"ContributionUpdate",
             "type":"object",
             "properties":{
                "target":{
                   "title":"Target",
                   "type":"integer",
                   "gte":0
                },
                "description":{
                   "title":"Description",
                   "type":"string"
                },
                "proof_label":{
                   "title":"Proof Label",
                   "type":"string"
                },
                "reward_worth":{
                   "title":"Reward Worth",
                   "type":"string"
                },
                "target_period_start":{
                   "title":"Target Period Start",
                   "type":"string",
                   "format":"date-time"
                },
                "target_period_end":{
                   "title":"Target Period End",
                   "type":"string",
                   "format":"date-time"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "active":{
                   "title":"Active",
                   "type":"boolean"
                },
                "tokens":{
                   "title":"Tokens",
                   "exclusiveMinimum":0.0,
                   "type":"integer"
                },
                "name":{
                   "title":"Name",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "DatasourceAuthentication":{
             "title":"DatasourceAuthentication",
             "required":[
                "type",
                "key",
                "value"
             ],
             "type":"object",
             "properties":{
                "type":{
                   "$ref":"#/components/schemas/DatasourceAuthenticationType"
                },
                "key":{
                   "title":"Key",
                   "type":"string"
                },
                "value":{
                   "title":"Value",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "DatasourceAuthenticationType":{
             "title":"DatasourceAuthenticationType",
             "enum":[
                "query",
                "header"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "DatasourceConfiguration":{
             "title":"DatasourceConfiguration",
             "required":[
                "source_url",
                "id_path"
             ],
             "type":"object",
             "properties":{
                "source_url":{
                   "title":"Source Url",
                   "maxLength":65536,
                   "minLength":1,
                   "type":"string",
                   "format":"uri"
                },
                "collection_path":{
                   "title":"Collection Path",
                   "type":"string"
                },
                "id_path":{
                   "title":"Id Path",
                   "type":"string"
                },
                "include_keys":{
                   "title":"Include Keys",
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "exclude_keys":{
                   "title":"Exclude Keys",
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "map_keys":{
                   "title":"Map Keys",
                   "type":"object",
                   "additionalProperties":{
                      "type":"string"
                   }
                },
                "authentication":{
                   "$ref":"#/components/schemas/DatasourceAuthentication"
                },
                "pagination":{
                   "$ref":"#/components/schemas/DatasourcePagination"
                }
             },
             "additionalProperties":false
          },
          "DatasourceCreate":{
             "title":"DatasourceCreate",
             "required":[
                "name",
                "configuration"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "interval":{
                   "title":"Interval",
                   "type":"string"
                },
                "retry_strategy":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/RetryStrategy"
                      }
                   ],
                   "default":"do_nothing"
                },
                "active":{
                   "title":"Active",
                   "type":"boolean",
                   "default":true
                },
                "deleted":{
                   "title":"Deleted",
                   "type":"boolean",
                   "default":false
                },
                "configuration":{
                   "$ref":"#/components/schemas/DatasourceConfiguration"
                }
             },
             "additionalProperties":false
          },
          "DatasourceGet":{
             "title":"DatasourceGet",
             "required":[
                "name",
                "configuration",
                "id",
                "date_added",
                "company_id"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "interval":{
                   "title":"Interval",
                   "type":"string"
                },
                "retry_strategy":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/RetryStrategy"
                      }
                   ],
                   "default":"do_nothing"
                },
                "active":{
                   "title":"Active",
                   "type":"boolean",
                   "default":true
                },
                "deleted":{
                   "title":"Deleted",
                   "type":"boolean",
                   "default":false
                },
                "configuration":{
                   "$ref":"#/components/schemas/DatasourceConfiguration"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "date_added":{
                   "title":"Date Added",
                   "type":"string",
                   "format":"date-time"
                },
                "company_id":{
                   "title":"Company Id",
                   "type":"string",
                   "format":"uuid"
                }
             },
             "additionalProperties":false
          },
          "DatasourceImportRunGet":{
             "title":"DatasourceImportRunGet",
             "required":[
                "id",
                "data_source_id",
                "started",
                "ended",
                "state",
                "result_data"
             ],
             "type":"object",
             "properties":{
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "data_source_id":{
                   "title":"Data Source Id",
                   "type":"string",
                   "format":"uuid"
                },
                "started":{
                   "title":"Started",
                   "type":"string",
                   "format":"date-time"
                },
                "ended":{
                   "title":"Ended",
                   "type":"string",
                   "format":"date-time"
                },
                "state":{
                   "$ref":"#/components/schemas/ImportRunState"
                },
                "failure_reason":{
                   "$ref":"#/components/schemas/ImportRunFailureReason"
                },
                "result_data":{
                   "title":"Result Data",
                   "type":"object"
                }
             },
             "additionalProperties":false
          },
          "DatasourcePagination":{
             "title":"DatasourcePagination",
             "required":[
                "type",
                "limit_value",
                "limit_parameter",
                "offset_parameter"
             ],
             "type":"object",
             "properties":{
                "type":{
                   "$ref":"#/components/schemas/PaginationType"
                },
                "limit_value":{
                   "title":"Limit Value",
                   "type":"integer"
                },
                "limit_parameter":{
                   "title":"Limit Parameter",
                   "type":"string"
                },
                "offset_parameter":{
                   "title":"Offset Parameter",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "DemoAccountGet":{
             "title":"DemoAccountGet",
             "required":[
                "user_id"
             ],
             "type":"object",
             "properties":{
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                }
             },
             "additionalProperties":false
          },
          "DescriptionData":{
             "title":"DescriptionData",
             "required":[
                "description",
                "program_details_link"
             ],
             "type":"object",
             "properties":{
                "description":{
                   "title":"Description",
                   "type":"string"
                },
                "program_details_link":{
                   "title":"Program Details Link",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "EvaluatorConfigCreate":{
             "title":"EvaluatorConfigCreate",
             "required":[
                "script",
                "name"
             ],
             "type":"object",
             "properties":{
                "interval":{
                   "title":"Interval",
                   "type":"string"
                },
                "retry_strategy":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/RetryStrategy"
                      }
                   ],
                   "default":"do_nothing"
                },
                "active":{
                   "title":"Active",
                   "type":"boolean",
                   "default":true
                },
                "deleted":{
                   "title":"Deleted",
                   "type":"boolean",
                   "default":false
                },
                "script":{
                   "title":"Script",
                   "type":"string"
                },
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "constants":{
                   "title":"Constants",
                   "type":"object",
                   "additionalProperties":{
                      "anyOf":[
                         {
                            "type":"integer"
                         },
                         {
                            "type":"string"
                         }
                      ]
                   },
                   "default":{
                      
                   }
                }
             },
             "additionalProperties":false
          },
          "EvaluatorConfigGet":{
             "title":"EvaluatorConfigGet",
             "required":[
                "script",
                "name",
                "id",
                "goal_id"
             ],
             "type":"object",
             "properties":{
                "interval":{
                   "title":"Interval",
                   "type":"string"
                },
                "retry_strategy":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/RetryStrategy"
                      }
                   ],
                   "default":"do_nothing"
                },
                "active":{
                   "title":"Active",
                   "type":"boolean",
                   "default":true
                },
                "deleted":{
                   "title":"Deleted",
                   "type":"boolean",
                   "default":false
                },
                "script":{
                   "title":"Script",
                   "type":"string"
                },
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "constants":{
                   "title":"Constants",
                   "type":"object",
                   "additionalProperties":{
                      "anyOf":[
                         {
                            "type":"integer"
                         },
                         {
                            "type":"string"
                         }
                      ]
                   },
                   "default":{
                      
                   }
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "goal_id":{
                   "title":"Goal Id",
                   "type":"string",
                   "format":"uuid"
                }
             },
             "additionalProperties":false
          },
          "EvaluatorRunFailureDetails":{
             "title":"EvaluatorRunFailureDetails",
             "type":"object",
             "properties":{
                "message":{
                   "title":"Message",
                   "type":"string"
                },
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                }
             },
             "additionalProperties":false
          },
          "EvaluatorRunFailureReason":{
             "title":"EvaluatorRunFailureReason",
             "enum":[
                "no_data_collected",
                "script_runtime_error",
                "uknown_error"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "EvaluatorRunGet":{
             "title":"EvaluatorRunGet",
             "required":[
                "id",
                "started",
                "state",
                "goal_id"
             ],
             "type":"object",
             "properties":{
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "started":{
                   "title":"Started",
                   "type":"string",
                   "format":"date-time"
                },
                "ended":{
                   "title":"Ended",
                   "type":"string",
                   "format":"date-time"
                },
                "state":{
                   "$ref":"#/components/schemas/EvaluatorRunState"
                },
                "goal_id":{
                   "title":"Goal Id",
                   "type":"string",
                   "format":"uuid"
                },
                "failure_reason":{
                   "$ref":"#/components/schemas/EvaluatorRunFailureReason"
                },
                "result_data":{
                   "$ref":"#/components/schemas/EvaluatorRunResultData"
                },
                "failure_details":{
                   "$ref":"#/components/schemas/EvaluatorRunFailureDetails"
                }
             },
             "additionalProperties":false
          },
          "EvaluatorRunResultData":{
             "title":"EvaluatorRunResultData",
             "required":[
                "records_processed",
                "records_updated"
             ],
             "type":"object",
             "properties":{
                "records_processed":{
                   "title":"Records Processed",
                   "type":"integer"
                },
                "records_updated":{
                   "title":"Records Updated",
                   "type":"integer"
                }
             },
             "additionalProperties":false
          },
          "EvaluatorRunState":{
             "title":"EvaluatorRunState",
             "enum":[
                "started",
                "succeeded",
                "failed"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "FAQSData":{
             "title":"FAQSData",
             "required":[
                "faqs",
                "more_faqs_link"
             ],
             "type":"object",
             "properties":{
                "faqs":{
                   "title":"Faqs",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/schemas__goal_marketing_data__FAQ"
                   }
                },
                "more_faqs_link":{
                   "title":"More Faqs Link",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "FounderMessageData":{
             "title":"FounderMessageData",
             "required":[
                "message_title",
                "message_body",
                "founder_name",
                "founder_title",
                "founder_image"
             ],
             "type":"object",
             "properties":{
                "message_title":{
                   "title":"Message Title",
                   "type":"string"
                },
                "message_body":{
                   "title":"Message Body",
                   "type":"string"
                },
                "founder_name":{
                   "title":"Founder Name",
                   "type":"string"
                },
                "founder_title":{
                   "title":"Founder Title",
                   "type":"string"
                },
                "founder_image":{
                   "title":"Founder Image",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "GoalContribution":{
             "title":"GoalContribution",
             "required":[
                "action",
                "tokens",
                "quantity"
             ],
             "type":"object",
             "properties":{
                "action":{
                   "title":"Action",
                   "type":"string"
                },
                "tokens":{
                   "title":"Tokens",
                   "type":"integer"
                },
                "quantity":{
                   "title":"Quantity",
                   "type":"integer"
                }
             },
             "additionalProperties":false
          },
          "GoalCreate":{
             "title":"GoalCreate",
             "required":[
                "name",
                "total_tokens"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "description":{
                   "title":"Description",
                   "type":"string"
                },
                "goal_type":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/GoalType"
                      }
                   ],
                   "default":"connected"
                },
                "goal_offer_note":{
                   "title":"Goal Offer Note",
                   "type":"string"
                },
                "datasource":{
                   "title":"Datasource",
                   "type":"string"
                },
                "datasource_state":{
                   "$ref":"#/components/schemas/GoalDatasourceState"
                },
                "goal_template":{
                   "title":"Goal Template",
                   "type":"string"
                },
                "reward_tokens":{
                   "title":"Reward Tokens",
                   "type":"string"
                },
                "ipfs_hash":{
                   "title":"Ipfs Hash",
                   "type":"string"
                },
                "contribution_amount":{
                   "title":"Contribution Amount",
                   "type":"integer"
                },
                "public":{
                   "title":"Public",
                   "type":"boolean",
                   "default":false
                },
                "state":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/GoalState"
                      }
                   ],
                   "default":"draft"
                },
                "placeholder_goal_id":{
                   "title":"Placeholder Goal Id",
                   "type":"string",
                   "format":"uuid"
                },
                "total_tokens":{
                   "title":"Total Tokens",
                   "type":"integer",
                   "gte":0
                }
             },
             "additionalProperties":false
          },
          "GoalDatasourceState":{
             "title":"GoalDatasourceState",
             "enum":[
                "insights_connecting",
                "insights_connected"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "GoalDocumentGet":{
             "title":"GoalDocumentGet",
             "required":[
                "id",
                "name",
                "goal_id",
                "revision",
                "timestamp",
                "ipfs_hash",
                "document_type"
             ],
             "type":"object",
             "properties":{
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "goal_id":{
                   "title":"Goal Id",
                   "type":"string",
                   "format":"uuid"
                },
                "revision":{
                   "title":"Revision",
                   "type":"integer"
                },
                "timestamp":{
                   "title":"Timestamp",
                   "type":"string",
                   "format":"date-time"
                },
                "ipfs_hash":{
                   "title":"Ipfs Hash",
                   "type":"string"
                },
                "document_type":{
                   "$ref":"#/components/schemas/GoalDocumentType"
                }
             },
             "additionalProperties":false
          },
          "GoalDocumentType":{
             "title":"GoalDocumentType",
             "enum":[
                "shareholder_agreement",
                "subscription_agreement"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "GoalGet":{
             "title":"GoalGet",
             "required":[
                "name",
                "id",
                "distributed_tokens",
                "total_tokens",
                "company_id",
                "number_of_contributors"
             ],
             "type":"object",
             "properties":{
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "description":{
                   "title":"Description",
                   "type":"string"
                },
                "goal_type":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/GoalType"
                      }
                   ],
                   "default":"connected"
                },
                "goal_offer_note":{
                   "title":"Goal Offer Note",
                   "type":"string"
                },
                "datasource":{
                   "title":"Datasource",
                   "type":"string"
                },
                "datasource_state":{
                   "$ref":"#/components/schemas/GoalDatasourceState"
                },
                "goal_template":{
                   "title":"Goal Template",
                   "type":"string"
                },
                "reward_tokens":{
                   "title":"Reward Tokens",
                   "type":"string"
                },
                "ipfs_hash":{
                   "title":"Ipfs Hash",
                   "type":"string"
                },
                "contribution_amount":{
                   "title":"Contribution Amount",
                   "type":"integer"
                },
                "public":{
                   "title":"Public",
                   "type":"boolean",
                   "default":false
                },
                "state":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/GoalState"
                      }
                   ],
                   "default":"draft"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "distributed_tokens":{
                   "title":"Distributed Tokens",
                   "type":"integer",
                   "gte":0
                },
                "total_tokens":{
                   "title":"Total Tokens",
                   "type":"integer",
                   "gte":0
                },
                "company_id":{
                   "title":"Company Id",
                   "type":"string",
                   "format":"uuid"
                },
                "offered_tokens":{
                   "title":"Offered Tokens",
                   "type":"integer"
                },
                "number_of_contributors":{
                   "title":"Number Of Contributors",
                   "type":"integer",
                   "gte":0
                },
                "contributions":{
                   "title":"Contributions",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/ContributionGet"
                   }
                }
             },
             "additionalProperties":false
          },
          "GoalInviteCodeGet":{
             "title":"GoalInviteCodeGet",
             "required":[
                "code",
                "goal_id",
                "timestamp"
             ],
             "type":"object",
             "properties":{
                "code":{
                   "title":"Code",
                   "type":"string"
                },
                "goal_id":{
                   "title":"Goal Id",
                   "type":"string",
                   "format":"uuid"
                },
                "timestamp":{
                   "title":"Timestamp",
                   "type":"string",
                   "format":"date-time"
                }
             },
             "additionalProperties":false
          },
          "GoalInviteResult":{
             "title":"GoalInviteResult",
             "required":[
                "succeeded",
                "failed",
                "errors"
             ],
             "type":"object",
             "properties":{
                "succeeded":{
                   "title":"Succeeded",
                   "type":"integer",
                   "gte":0
                },
                "failed":{
                   "title":"Failed",
                   "type":"integer",
                   "gte":0
                },
                "errors":{
                   "title":"Errors",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CSVImportError"
                   }
                }
             },
             "additionalProperties":false
          },
          "GoalMarketingDataGet":{
             "title":"GoalMarketingDataGet",
             "required":[
                "id",
                "data",
                "type"
             ],
             "type":"object",
             "properties":{
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "data":{
                   "title":"Data",
                   "anyOf":[
                      {
                         "$ref":"#/components/schemas/JourneyData"
                      },
                      {
                         "$ref":"#/components/schemas/DescriptionData"
                      },
                      {
                         "$ref":"#/components/schemas/FAQSData"
                      },
                      {
                         "$ref":"#/components/schemas/FounderMessageData"
                      }
                   ]
                },
                "type":{
                   "$ref":"#/components/schemas/GoalMarketingDataType"
                }
             },
             "additionalProperties":false
          },
          "GoalMarketingDataType":{
             "title":"GoalMarketingDataType",
             "enum":[
                "your_journey",
                "description",
                "faqs",
                "founder_message"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "GoalParticipantContribution":{
             "title":"GoalParticipantContribution",
             "required":[
                "user_id",
                "contribution_id"
             ],
             "type":"object",
             "properties":{
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                },
                "contribution_id":{
                   "title":"Contribution Id",
                   "type":"string",
                   "format":"uuid"
                }
             },
             "additionalProperties":false
          },
          "GoalParticipantCreate":{
             "title":"GoalParticipantCreate",
             "required":[
                "user_id"
             ],
             "type":"object",
             "properties":{
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                },
                "tokens":{
                   "title":"Tokens",
                   "type":"integer",
                   "default":0,
                   "gte":0
                }
             },
             "additionalProperties":false
          },
          "GoalParticipantGet":{
             "title":"GoalParticipantGet",
             "required":[
                "user_id",
                "goal_id",
                "issue_date"
             ],
             "type":"object",
             "properties":{
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                },
                "goal_id":{
                   "title":"Goal Id",
                   "type":"string",
                   "format":"uuid"
                },
                "issue_date":{
                   "title":"Issue Date",
                   "type":"string",
                   "format":"date-time"
                },
                "tokens":{
                   "title":"Tokens",
                   "type":"integer"
                },
                "unvested_tokens":{
                   "title":"Unvested Tokens",
                   "type":"integer"
                },
                "tokens_pending_coowner_acceptance":{
                   "title":"Tokens Pending Coowner Acceptance",
                   "type":"integer"
                },
                "tokens_pending_company_approval":{
                   "title":"Tokens Pending Company Approval",
                   "type":"integer"
                }
             },
             "additionalProperties":false
          },
          "GoalParticipantInvite":{
             "title":"GoalParticipantInvite",
             "required":[
                "email"
             ],
             "type":"object",
             "properties":{
                "email":{
                   "title":"Email",
                   "type":"string",
                   "format":"email"
                },
                "tokens":{
                   "title":"Tokens",
                   "type":"integer",
                   "default":0,
                   "gte":0
                }
             },
             "additionalProperties":false
          },
          "GoalParticipantInviteDev":{
             "title":"GoalParticipantInviteDev",
             "required":[
                "email",
                "mock_time"
             ],
             "type":"object",
             "properties":{
                "email":{
                   "title":"Email",
                   "type":"string",
                   "format":"email"
                },
                "tokens":{
                   "title":"Tokens",
                   "type":"integer",
                   "default":0,
                   "gte":0
                },
                "mock_time":{
                   "title":"Mock Time",
                   "type":"string",
                   "format":"date-time"
                }
             },
             "additionalProperties":false
          },
          "GoalParticipantTokens":{
             "title":"GoalParticipantTokens",
             "required":[
                "user_id"
             ],
             "type":"object",
             "properties":{
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                },
                "tokens":{
                   "title":"Tokens",
                   "type":"integer",
                   "default":0,
                   "gte":0
                },
                "reward_type":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/GoalRewardType"
                      }
                   ],
                   "default":"performance"
                }
             },
             "additionalProperties":false
          },
          "GoalParticipantTokensInternal":{
             "title":"GoalParticipantTokensInternal",
             "required":[
                "user_id"
             ],
             "type":"object",
             "properties":{
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                },
                "tokens":{
                   "title":"Tokens",
                   "type":"integer",
                   "default":0,
                   "gte":0
                },
                "reward_type":{
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/GoalRewardType"
                      }
                   ],
                   "default":"performance"
                },
                "unvested_tokens":{
                   "title":"Unvested Tokens",
                   "type":"integer",
                   "default":0,
                   "gte":0
                },
                "contribution_id":{
                   "title":"Contribution Id",
                   "type":"string",
                   "format":"uuid"
                },
                "contribution_name":{
                   "title":"Contribution Name",
                   "type":"string"
                },
                "contribution_completions":{
                   "title":"Contribution Completions",
                   "type":"integer",
                   "default":1,
                   "gte":0
                },
                "contribution_proof":{
                   "title":"Contribution Proof",
                   "type":"string"
                },
                "timestamp_override":{
                   "title":"Timestamp Override",
                   "type":"string",
                   "format":"date-time"
                },
                "time_to_accept_override":{
                   "title":"Time To Accept Override",
                   "type":"string",
                   "format":"date-time"
                }
             },
             "additionalProperties":false
          },
          "GoalRewardType":{
             "title":"GoalRewardType",
             "enum":[
                "performance",
                " achievement"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "GoalState":{
             "title":"GoalState",
             "enum":[
                "draft",
                "active",
                "archived"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "GoalType":{
             "title":"GoalType",
             "enum":[
                "independent",
                "connected"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "GoalUpdate":{
             "title":"GoalUpdate",
             "type":"object",
             "properties":{
                "ipfs_hash":{
                   "title":"Ipfs Hash",
                   "type":"string"
                },
                "name":{
                   "title":"Name",
                   "type":"string"
                },
                "contribution_amount":{
                   "title":"Contribution Amount",
                   "type":"integer"
                },
                "contributions":{
                   "title":"Contributions",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/GoalContribution"
                   }
                },
                "state":{
                   "$ref":"#/components/schemas/GoalState"
                },
                "description":{
                   "title":"Description",
                   "type":"string"
                },
                "goal_type":{
                   "$ref":"#/components/schemas/GoalType"
                },
                "reward_tokens":{
                   "title":"Reward Tokens",
                   "type":"string"
                },
                "public":{
                   "title":"Public",
                   "type":"boolean"
                },
                "total_tokens":{
                   "title":"Total Tokens",
                   "type":"integer",
                   "gte":0
                }
             },
             "additionalProperties":false
          },
          "HTTPValidationError":{
             "title":"HTTPValidationError",
             "type":"object",
             "properties":{
                "detail":{
                   "title":"Detail",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/ValidationError"
                   }
                }
             }
          },
          "HistoryGet":{
             "title":"HistoryGet",
             "required":[
                "timestamp",
                "user_id",
                "type",
                "data"
             ],
             "type":"object",
             "properties":{
                "timestamp":{
                   "title":"Timestamp",
                   "type":"string",
                   "format":"date-time"
                },
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                },
                "company_id":{
                   "title":"Company Id",
                   "type":"string",
                   "format":"uuid"
                },
                "goal_id":{
                   "title":"Goal Id",
                   "type":"string",
                   "format":"uuid"
                },
                "type":{
                   "$ref":"#/components/schemas/HistoryItemType"
                },
                "data":{
                   "$ref":"#/components/schemas/UserHistoryDetails"
                }
             },
             "additionalProperties":false
          },
          "HistoryItemType":{
             "title":"HistoryItemType",
             "enum":[
                "platform_joined",
                "company_created",
                "goal_created",
                "goal_invited",
                "goal_signed",
                "tokens_awarded",
                "tokens_accepted",
                "tokens_rejected",
                "goal_terminated",
                "goal_signature_expired"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "ImportRunFailureReason":{
             "title":"ImportRunFailureReason",
             "enum":[
                "datasource_not_available",
                "datasource_authentication_error",
                "malformed_source_data",
                "id_path_not_set",
                "can_not_transform_entry",
                "unkown_secret_exception",
                "uknown_error"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "ImportRunState":{
             "title":"ImportRunState",
             "enum":[
                "started",
                "succeeded",
                "failed"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "JourneyData":{
             "title":"JourneyData",
             "required":[
                "steps"
             ],
             "type":"object",
             "properties":{
                "steps":{
                   "title":"Steps",
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                }
             },
             "additionalProperties":false
          },
          "MarketingDataDescription":{
             "title":"MarketingDataDescription",
             "required":[
                "type",
                "data"
             ],
             "type":"object",
             "properties":{
                "type":{
                   "title":"Type",
                   "enum":[
                      "description"
                   ],
                   "type":"string"
                },
                "data":{
                   "$ref":"#/components/schemas/DescriptionData"
                }
             },
             "additionalProperties":false
          },
          "MarketingDataFAQS":{
             "title":"MarketingDataFAQS",
             "required":[
                "type",
                "data"
             ],
             "type":"object",
             "properties":{
                "type":{
                   "title":"Type",
                   "enum":[
                      "faqs"
                   ],
                   "type":"string"
                },
                "data":{
                   "$ref":"#/components/schemas/FAQSData"
                }
             },
             "additionalProperties":false
          },
          "MarketingDataFounderMessage":{
             "title":"MarketingDataFounderMessage",
             "required":[
                "type",
                "data"
             ],
             "type":"object",
             "properties":{
                "type":{
                   "title":"Type",
                   "enum":[
                      "founder_message"
                   ],
                   "type":"string"
                },
                "data":{
                   "$ref":"#/components/schemas/FounderMessageData"
                }
             },
             "additionalProperties":false
          },
          "MarketingDataJourney":{
             "title":"MarketingDataJourney",
             "required":[
                "type",
                "data"
             ],
             "type":"object",
             "properties":{
                "type":{
                   "title":"Type",
                   "enum":[
                      "your_journey"
                   ],
                   "type":"string"
                },
                "data":{
                   "$ref":"#/components/schemas/JourneyData"
                }
             },
             "additionalProperties":false
          },
          "OAuthToken":{
             "title":"OAuthToken",
             "required":[
                "access_token",
                "token_type",
                "expires_in",
                "id_token",
                "scope"
             ],
             "type":"object",
             "properties":{
                "access_token":{
                   "title":"Access Token",
                   "type":"string"
                },
                "token_type":{
                   "title":"Token Type",
                   "type":"string"
                },
                "expires_in":{
                   "title":"Expires In",
                   "type":"integer"
                },
                "id_token":{
                   "title":"Id Token",
                   "type":"string"
                },
                "scope":{
                   "title":"Scope",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "OfferedTokensGet":{
             "title":"OfferedTokensGet",
             "required":[
                "id",
                "timestamp",
                "tokens",
                "goal_id",
                "state",
                "reward_type",
                "subscription_agreement_id",
                "user_id"
             ],
             "type":"object",
             "properties":{
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "timestamp":{
                   "title":"Timestamp",
                   "type":"string",
                   "format":"date-time"
                },
                "tokens":{
                   "title":"Tokens",
                   "exclusiveMinimum":0.0,
                   "type":"integer"
                },
                "goal_id":{
                   "title":"Goal Id",
                   "type":"string",
                   "format":"uuid"
                },
                "state":{
                   "$ref":"#/components/schemas/OfferedTokensState"
                },
                "reward_type":{
                   "title":"Reward Type",
                   "type":"string"
                },
                "subscription_agreement_id":{
                   "title":"Subscription Agreement Id",
                   "type":"string",
                   "format":"uuid"
                },
                "contribution_id":{
                   "title":"Contribution Id",
                   "type":"string",
                   "format":"uuid"
                },
                "contribution_name":{
                   "title":"Contribution Name",
                   "type":"string"
                },
                "time_to_accept":{
                   "title":"Time To Accept",
                   "type":"string",
                   "format":"date-time"
                },
                "user_id":{
                   "title":"User Id",
                   "type":"string",
                   "format":"uuid"
                },
                "company_response_timestamp":{
                   "title":"Company Response Timestamp",
                   "type":"string",
                   "format":"date-time"
                },
                "coowner_response_timestamp":{
                   "title":"Coowner Response Timestamp",
                   "type":"string",
                   "format":"date-time"
                }
             },
             "additionalProperties":false
          },
          "OfferedTokensState":{
             "title":"OfferedTokensState",
             "enum":[
                "pending_company_approval",
                "rejected_by_company",
                "pending_coowner_acceptance",
                "accepted_by_coowner",
                "rejected_by_coowner",
                "expired"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "PaginationType":{
             "title":"PaginationType",
             "enum":[
                "offset_limit"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "PublishedStatus":{
             "title":"PublishedStatus",
             "enum":[
                "draft",
                "published"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "RetryStrategy":{
             "title":"RetryStrategy",
             "enum":[
                "do_nothing",
                "retry_3_times",
                "incremental_backoff"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "SecretCreate":{
             "title":"SecretCreate",
             "required":[
                "value",
                "name"
             ],
             "type":"object",
             "properties":{
                "value":{
                   "title":"Value",
                   "type":"string"
                },
                "name":{
                   "title":"Name",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "SecretGet":{
             "title":"SecretGet",
             "required":[
                "id",
                "company_id",
                "name"
             ],
             "type":"object",
             "properties":{
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "company_id":{
                   "title":"Company Id",
                   "type":"string",
                   "format":"uuid"
                },
                "name":{
                   "title":"Name",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "TextColor":{
             "title":"TextColor",
             "enum":[
                "dark",
                "light"
             ],
             "type":"string",
             "description":"An enumeration."
          },
          "TimelineStep":{
             "title":"TimelineStep",
             "required":[
                "title",
                "time_period",
                "description"
             ],
             "type":"object",
             "properties":{
                "title":{
                   "title":"Title",
                   "type":"string"
                },
                "time_period":{
                   "title":"Time Period",
                   "type":"string"
                },
                "description":{
                   "title":"Description",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "UploadResult":{
             "title":"UploadResult",
             "required":[
                "file_url"
             ],
             "type":"object",
             "properties":{
                "file_url":{
                   "title":"File Url",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "UserCreate":{
             "title":"UserCreate",
             "required":[
                "email"
             ],
             "type":"object",
             "properties":{
                "first_name":{
                   "title":"First Name",
                   "type":"string"
                },
                "last_name":{
                   "title":"Last Name",
                   "type":"string"
                },
                "bio":{
                   "title":"Bio",
                   "type":"string"
                },
                "profile_image":{
                   "title":"Profile Image",
                   "type":"string"
                },
                "postal_address":{
                   "title":"Postal Address",
                   "type":"string"
                },
                "auth_id":{
                   "title":"Auth Id",
                   "type":"string"
                },
                "email":{
                   "title":"Email",
                   "type":"string",
                   "format":"email"
                }
             },
             "additionalProperties":false
          },
          "UserGet":{
             "title":"UserGet",
             "required":[
                "id",
                "date_added",
                "email"
             ],
             "type":"object",
             "properties":{
                "first_name":{
                   "title":"First Name",
                   "type":"string"
                },
                "last_name":{
                   "title":"Last Name",
                   "type":"string"
                },
                "bio":{
                   "title":"Bio",
                   "type":"string"
                },
                "profile_image":{
                   "title":"Profile Image",
                   "type":"string"
                },
                "postal_address":{
                   "title":"Postal Address",
                   "type":"string"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                },
                "date_added":{
                   "title":"Date Added",
                   "type":"string",
                   "format":"date-time"
                },
                "email":{
                   "title":"Email",
                   "type":"string",
                   "format":"email"
                }
             },
             "additionalProperties":false
          },
          "UserGetBasic":{
             "title":"UserGetBasic",
             "required":[
                "id"
             ],
             "type":"object",
             "properties":{
                "first_name":{
                   "title":"First Name",
                   "type":"string"
                },
                "last_name":{
                   "title":"Last Name",
                   "type":"string"
                },
                "id":{
                   "title":"Id",
                   "type":"string",
                   "format":"uuid"
                }
             },
             "additionalProperties":false
          },
          "UserHistoryDetails":{
             "title":"UserHistoryDetails",
             "type":"object",
             "properties":{
                "goal_id":{
                   "title":"Goal Id",
                   "type":"string",
                   "format":"uuid"
                },
                "tokens":{
                   "title":"Tokens",
                   "type":"integer"
                },
                "unvested_tokens":{
                   "title":"Unvested Tokens",
                   "type":"integer"
                },
                "termination_type":{
                   "title":"Termination Type",
                   "type":"string"
                },
                "reward_type":{
                   "title":"Reward Type",
                   "type":"string"
                },
                "offered_tokens_id":{
                   "title":"Offered Tokens Id",
                   "type":"string"
                },
                "contribution_name":{
                   "title":"Contribution Name",
                   "type":"string"
                },
                "goal_name":{
                   "title":"Goal Name",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "UserUpdate":{
             "title":"UserUpdate",
             "type":"object",
             "properties":{
                "first_name":{
                   "title":"First Name",
                   "type":"string"
                },
                "last_name":{
                   "title":"Last Name",
                   "type":"string"
                },
                "bio":{
                   "title":"Bio",
                   "type":"string"
                },
                "profile_image":{
                   "title":"Profile Image",
                   "type":"string"
                },
                "postal_address":{
                   "title":"Postal Address",
                   "type":"string"
                },
                "address":{
                   "title":"Address",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "UserUpdateEmail":{
             "title":"UserUpdateEmail",
             "required":[
                "email"
             ],
             "type":"object",
             "properties":{
                "email":{
                   "title":"Email",
                   "type":"string",
                   "format":"email"
                }
             },
             "additionalProperties":false
          },
          "ValidationError":{
             "title":"ValidationError",
             "required":[
                "loc",
                "msg",
                "type"
             ],
             "type":"object",
             "properties":{
                "loc":{
                   "title":"Location",
                   "type":"array",
                   "items":{
                      "anyOf":[
                         {
                            "type":"string"
                         },
                         {
                            "type":"integer"
                         }
                      ]
                   }
                },
                "msg":{
                   "title":"Message",
                   "type":"string"
                },
                "type":{
                   "title":"Error Type",
                   "type":"string"
                }
             }
          },
          "schemas__community_page__FAQ":{
             "title":"FAQ",
             "required":[
                "question",
                "answer"
             ],
             "type":"object",
             "properties":{
                "question":{
                   "title":"Question",
                   "type":"string"
                },
                "answer":{
                   "title":"Answer",
                   "type":"string"
                }
             },
             "additionalProperties":false
          },
          "schemas__goal_marketing_data__FAQ":{
             "title":"FAQ",
             "required":[
                "question",
                "answer"
             ],
             "type":"object",
             "properties":{
                "question":{
                   "title":"Question",
                   "type":"string"
                },
                "answer":{
                   "title":"Answer",
                   "type":"string"
                }
             },
             "additionalProperties":false
          }
       },
       "securitySchemes":{
          "Auth":{
             "type":"http",
             "scheme":"bearer"
          }
       }
    }
 }
